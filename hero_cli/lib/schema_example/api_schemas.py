# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2022-09-05T22:20:45+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import BaseModel, Field


class HealthResponse(BaseModel):
    status: str = Field(..., title="Status")


class SuperPower(str, Enum):
    flight = "flight"
    super_strength = "super-strength"
    super_speed = "super-speed"
    gills = "gills"
    rich = "rich"


class UpdateSuperhero(BaseModel):
    name: Optional[str] = Field(None, title="Name")
    super_power: Optional[SuperPower] = None
    hometown: Optional[str] = Field(None, title="Hometown")


class ValidationError(BaseModel):
    loc: List[Union[str, int]] = Field(..., title="Location")
    msg: str = Field(..., title="Message")
    type: str = Field(..., title="Error Type")


class CreateSuperhero(BaseModel):
    name: Optional[str] = Field(None, example="Batman", title="Name")
    super_power: Optional[SuperPower] = Field(None, example="rich")
    hometown: Optional[str] = Field(None, title="Hometown")


class GetSuperhero(BaseModel):
    name: Optional[str] = Field(None, example="Batman", title="Name")
    super_power: Optional[SuperPower] = Field(None, example="rich")
    hometown: Optional[str] = Field(None, title="Hometown")
    id: UUID = Field(..., title="Id")


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title="Detail")


class GetHeroes(BaseModel):
    heroes: List[GetSuperhero] = Field(..., title="Heroes")
